import{N as g,a as c,b as l,m as i}from"./chunk-5P4XIA3I.js";var d=class u{mockConges=[{id:"1",employeId:"1",type:"CONGE_PAYE",dateDebut:"2025-08-15",dateFin:"2025-08-30",nbJours:16,statut:"EN_ATTENTE",motif:"Vacances d'\xE9t\xE9"},{id:"2",employeId:"1",type:"CONGE_PAYE",dateDebut:"2025-06-01",dateFin:"2025-06-05",nbJours:5,statut:"APPROUVE",motif:"Cong\xE9 familial"},{id:"3",employeId:"1",type:"CONGE_MALADIE",dateDebut:"2025-05-15",dateFin:"2025-05-17",nbJours:3,statut:"APPROUVE",motif:"Maladie"}];getCongesByEmploye(o){let t=this.mockConges.filter(s=>s.employeId===o);return i(t)}createConge(o){let t=l(c({},o),{id:Math.random().toString(36).substr(2,9)});return this.mockConges.push(t),i(t)}getStatistiquesConges(o,t){let s=this.mockConges.filter(e=>e.employeId===o&&new Date(e.dateDebut).getFullYear()===t&&e.statut==="APPROUVE"),r=s.filter(e=>e.type==="CONGE_PAYE").reduce((e,n)=>e+n.nbJours,0),a={totalAutorise:30,totalPris:r,totalRestant:30-r,congesMaladie:s.filter(e=>e.type==="CONGE_MALADIE").reduce((e,n)=>e+n.nbJours,0),congesEnAttente:this.mockConges.filter(e=>e.employeId===o&&e.statut==="EN_ATTENTE").reduce((e,n)=>e+n.nbJours,0)};return i(a)}calculerJoursOuvrables(o,t){let s=new Date(o),r=new Date(t),a=0,e=new Date(s);for(;e<=r;){let n=e.getDay();n!==0&&n!==6&&a++,e.setDate(e.getDate()+1)}return a}static \u0275fac=function(t){return new(t||u)};static \u0275prov=g({token:u,factory:u.\u0275fac,providedIn:"root"})};export{d as a};
